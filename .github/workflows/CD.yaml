name: "CD Pipeline"

on:
  workflow_run:
    workflows:
      - "CI Pipeline"
    types:
      - completed

jobs:
  DEPLOY_JOB:
    if: ${{ github.event.workflow_run.conclusion == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repo 
        uses: actions/checkout@v2
      
      - name: Deploy to Production (placeholder)
        run: |
          echo "Deploying to production server..."
          sleep 3
      
      - name: Docker Login
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
    
      - name: Login to Azure Container Registry
        uses: docker/login-action@v2
        with:
          registry: ${{ secrets.AZURE_CONTAINER_LOGIN_SERVER }}
          username: ${{ secrets.AZURE_CONTAINER_USERNAME }}
          password: ${{ secrets.AZURE_CONTAINER_PASSWORD }}

      - name: Build, Tag and Push Backend Image
        run: |
          cd app/ 
          docker build -t backend_webapp:latest .
          docker tag backend_webapp:latest ${{ secrets.DOCKER_USERNAME }}/backend_webapp:latest
          docker push ${{ secrets.DOCKER_USERNAME }}/backend_webapp:latest
          docker tag backend_webapp:latest ${{ secrets.AZURE_CONTAINER_LOGIN_SERVER }}/backend_webapp:latest
          docker push ${{ secrets.AZURE_CONTAINER_LOGIN_SERVER }}/backend_webapp:latest
  
  DELIVERY_JOB:
    needs: DEPLOY_JOB
    runs-on: ubuntu-latest
    steps:
      - name: SSH Delivery
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          port: 22
          script: |
            if [ ! -d "PyStackOps" ]; then
              git clone https://github.com/senani-derradji/PyStackOps
            else
              cd PyStackOps && git pull && cd ..
            fi
            chmod +x ./PyStackOps/k8s/K3s/PROD/*.sh
            ./PyStackOps/k8s/K3s/PROD/install.sh
            ./PyStackOps/k8s/K3s/PROD/best-practices.sh