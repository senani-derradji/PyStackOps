name : "CI Pipeline"

on: 
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
    

jobs :
  CI_Job:
    runs-on: ubuntu-latest
    
    steps:
      - name : Checkout Repository
        uses: actions/checkout@v2
      
      - name : Set Docker Compose
        run : |
          docker compose -f docker-compose.yml up -d --build
      
      - name : Wait for Services
        run : sleep 15
      
      - name : Test Flask App
        run : |
          cd app
          sleep 5
          docker compose exec backend_webapp pytest test_app.py


      - name : Logs if Failure
        if: failure()
        run: |
          docker compose logs backend_webapp
          docker compose logs db
          docker compose logs redis
      
      - name : Stop and Remove Containers
        run: |
          docker compose down
      
      - name: Install Kubectl
        uses: azure/setup-kubectl@v3
        with:
          kubectl-version: 'v1.28.0' 

      - name: Verify Kubectl version
        run: kubectl version --client

      - name: Install Kind
        run: |
          curl -Lo ./kind https://kind.sigs.k8s.io/dl/v0.20.0/kind-linux-amd64
          chmod +x ./kind
          sudo mv ./kind /usr/local/bin/kind
      
      - name: Verify Kind version
        run: kind version

      - name: Create Kind Cluster
        run: |
          ls
          cd k8s
          cd Kind
          ls
          sleep 3
          kind create cluster --config Kind-Config.yaml
          kubectl cluster-info
          kubectl get nodes


      - name: Install Local Path Provisioner
        run: |
          # Apply the manifest that installs the StorageClass and all necessary resources
          kubectl apply -f https://raw.githubusercontent.com/rancher/local-path-provisioner/v0.0.24/deploy/local-path-storage.yaml
        
          # Set it as the default storage class (optional but often useful)
          kubectl patch storageclass local-path -p '{"metadata": {"annotations":{"storageclass.kubernetes.io/is-default-class":"true"}}}'
        
          # Wait for the provisioner pod to be ready
          kubectl rollout status deployment/local-path-provisioner -n local-path-storage --timeout=90s

      - name: Verify Cluster Access
        run: |
          kubectl get nodes
          echo "=== Available Storage Classes ==="
          kubectl get storageclass # You should see 'local-path' here 
      
      - name: Apply Kubernetes Manifests
        run: |
          cd k8s/Kind
          ./apply.sh
      
      - name: Verify Pods
        run: |
          kubectl wait --for=condition=ready --timeout=180s pod --all

      - name: Verify Services
        run: |
          kubectl get services
          kubectl get pods
      
      - name: Test Flask App in Kubernetes
        run: |
          kubectl port-forward service/flask-service 8080:5000 &
        
          # Capture the Process ID (PID) of the background job
          PF_PID=$!

          # Wait a few seconds for the port-forward to establish the connection
          sleep 5

          if curl -s http://localhost:8080; then
            echo "::notice::Flask app is running successfully in Kubernetes."
          else
            echo "::error::Flask app is not running in Kubernetes."
            exit 1
          fi

      - name: Destroy Kind Cluster
        run: |
          kind delete cluster
          kubectl config delete-cluster kind-kind
          kubectl config unset current-context
          kubectl config delete-context kind-kind
          echo "::notice::Kind cluster destroyed successfully."